{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "TNT",
	"patterns": [
		{
			"include": "#lineComments"
		},
		{
			"include": "#blockComments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#storage"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#identifiers"
		},
		{
			"include": "#strings"
		}
	],
	"repository": {
		"identifiers": {
			"patterns": [{
				"name": "meta.tnt",
				"match": "[a-zA-Z_]([a-zA-Z0-9_])*"
			}]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.tnt",
					"match": "\\b(module|extends|end|with|if|else|case)\\b"
				}
			]
		},
		"storage": {
			"patterns": [
				{
					"name": "storage.modifier.tnt",
					"match": "\\b(typedef|assume|const|var|val|def|static|action|temporal)\\b"
				},
				{
					"name": "storage.type.tnt",
					"match": "\\b(rec|set|list|int|str|bool)\\b"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.tnt",
					"match": "\\b(not|or|and|implies|iff|always|eventually|weakFair|strongFair|guarantees|next|unchanged|enabled|stutter|nostutter)\\b"
				},
				{
					"name": "keyword.operator.tnt",
					"match": "\\b(guess|choose|forall|exists|map|filter|allLists|to)\\b"
				},
				{
					"name": "keyword.operator.tnt",
					"match": "\\b(get|keys|mapOf|setOfMaps|update|updateAs|put)\\b"
				},
				{
					"name": "keyword.operator.tnt",
					"match": "\\b(cardinality|isFinite|intersect|union|difference|powerset|chooseSome|fold)\\b"
				},
				{
					"name": "keyword.operator.tnt",
					"match": "\\b(tuples|field|fieldNames|with|item)\\b"
				},
				{
					"name": "keyword.operator.tnt",
					"match": "\\b(append|concat|head|tail|length|nth|indices|replaceAt|slice|select|foldl|foldr)\\b"
				},
				{
					"name": "keyword.operator.tnt",
					"match": "\\b(all|any)\\b"
				},
				{
					"name": "keyword.operator.tnt",
					"match": "(=>|<-|>|<|:=|=|!=|\\.|\\*|\\+|-|/|%|\\^|\\&|\\||subseteq|in|notin)"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.tnt",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.tnt",
					"match": "\\\\."
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.tnt",
					"match": "-?\\d+"
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"name": "constant.language.tnt",
					"match": "(false|true|Bool|Int|Nat|Str)"
				}
			]
		},
		"lineComments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.tnt",
					"match": "//.*$"
				}
			]
		},
		"blockComments": {
			"name": "comment.block.tnt",
			"begin": "/\\*",
			"end": "\\*/",
			"patterns": []
		}
	},
	"scopeName": "source.tnt"
}
