// Generated from ./src/generated/Tnt.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class TntLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly T__29 = 30;
	public static readonly T__30 = 31;
	public static readonly STRING = 32;
	public static readonly BOOL = 33;
	public static readonly INT = 34;
	public static readonly AND = 35;
	public static readonly OR = 36;
	public static readonly IFF = 37;
	public static readonly IMPLIES = 38;
	public static readonly SUBSETEQ = 39;
	public static readonly IN = 40;
	public static readonly NOTIN = 41;
	public static readonly SET = 42;
	public static readonly SEQ = 43;
	public static readonly MATCH = 44;
	public static readonly PLUS = 45;
	public static readonly MINUS = 46;
	public static readonly MUL = 47;
	public static readonly DIV = 48;
	public static readonly MOD = 49;
	public static readonly GT = 50;
	public static readonly LT = 51;
	public static readonly GE = 52;
	public static readonly LE = 53;
	public static readonly NE = 54;
	public static readonly EQ = 55;
	public static readonly ASGN = 56;
	public static readonly LPAREN = 57;
	public static readonly RPAREN = 58;
	public static readonly IDENTIFIER = 59;
	public static readonly SIMPLE_IDENTIFIER = 60;
	public static readonly LINE_COMMENT = 61;
	public static readonly COMMENT = 62;
	public static readonly WS = 63;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "STRING", "BOOL", 
		"INT", "AND", "OR", "IFF", "IMPLIES", "SUBSETEQ", "IN", "NOTIN", "SET", 
		"SEQ", "MATCH", "PLUS", "MINUS", "MUL", "DIV", "MOD", "GT", "LT", "GE", 
		"LE", "NE", "EQ", "ASGN", "LPAREN", "RPAREN", "IDENTIFIER", "SIMPLE_IDENTIFIER", 
		"LINE_COMMENT", "COMMENT", "WS",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'module'", "'{'", "'}'", "'const'", "':'", "'var'", "'assume'", 
		"'='", "'type'", "'import'", "'.'", "';'", "'val'", "'def'", "'static'", 
		"'action'", "'temporal'", "','", "'->'", "'=>'", "'int'", "'str'", "'bool'", 
		"'|'", "'['", "']'", "'^'", "'&'", "'if'", "'else'", "'_'", undefined, 
		undefined, undefined, "'and'", "'or'", "'iff'", "'implies'", "'subseteq'", 
		"'in'", "'notin'", "'set'", "'seq'", "'match'", "'+'", "'-'", "'*'", "'/'", 
		"'%'", "'>'", "'<'", "'>='", "'<='", "'!='", "'=='", "'<-'", "'('", "')'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, "STRING", "BOOL", "INT", "AND", 
		"OR", "IFF", "IMPLIES", "SUBSETEQ", "IN", "NOTIN", "SET", "SEQ", "MATCH", 
		"PLUS", "MINUS", "MUL", "DIV", "MOD", "GT", "LT", "GE", "LE", "NE", "EQ", 
		"ASGN", "LPAREN", "RPAREN", "IDENTIFIER", "SIMPLE_IDENTIFIER", "LINE_COMMENT", 
		"COMMENT", "WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(TntLexer._LITERAL_NAMES, TntLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return TntLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(TntLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Tnt.g4"; }

	// @Override
	public get ruleNames(): string[] { return TntLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return TntLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return TntLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return TntLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02A\u01A0\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03" +
		"\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03" +
		"\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03" +
		"\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\n\x03" +
		"\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\r\x03" +
		"\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03" +
		"\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03" +
		"\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03" +
		"\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03" +
		"\x14\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17\x03" +
		"\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03" +
		"\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03" +
		"\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03 \x03" +
		" \x03!\x03!\x07!\xFC\n!\f!\x0E!\xFF\v!\x03!\x03!\x03\"\x03\"\x03\"\x03" +
		"\"\x03\"\x03\"\x03\"\x03\"\x03\"\x05\"\u010C\n\"\x03#\x06#\u010F\n#\r" +
		"#\x0E#\u0110\x03$\x03$\x03$\x03$\x03%\x03%\x03%\x03&\x03&\x03&\x03&\x03" +
		"\'\x03\'\x03\'\x03\'\x03\'\x03\'\x03\'\x03\'\x03(\x03(\x03(\x03(\x03(" +
		"\x03(\x03(\x03(\x03(\x03)\x03)\x03)\x03*\x03*\x03*\x03*\x03*\x03*\x03" +
		"+\x03+\x03+\x03+\x03,\x03,\x03,\x03,\x03-\x03-\x03-\x03-\x03-\x03-\x03" +
		".\x03.\x03/\x03/\x030\x030\x031\x031\x032\x032\x033\x033\x034\x034\x03" +
		"5\x035\x035\x036\x036\x036\x037\x037\x037\x038\x038\x038\x039\x039\x03" +
		"9\x03:\x03:\x03;\x03;\x03<\x03<\x03<\x03<\x03<\x03<\x03<\x05<\u016E\n" +
		"<\x03=\x03=\x07=\u0172\n=\f=\x0E=\u0175\v=\x03=\x03=\x06=\u0179\n=\r=" +
		"\x0E=\u017A\x05=\u017D\n=\x03>\x03>\x03>\x03>\x07>\u0183\n>\f>\x0E>\u0186" +
		"\v>\x03>\x03>\x03>\x03>\x03?\x03?\x03?\x03?\x07?\u0190\n?\f?\x0E?\u0193" +
		"\v?\x03?\x03?\x03?\x03?\x03?\x03@\x06@\u019B\n@\r@\x0E@\u019C\x03@\x03" +
		"@\x05\xFD\u0184\u0191\x02\x02A\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02" +
		"\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02" +
		"\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%" +
		"\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B" +
		"5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02" +
		"%I\x02&K\x02\'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02.[\x02/]\x020_" +
		"\x021a\x022c\x023e\x024g\x025i\x026k\x027m\x028o\x029q\x02:s\x02;u\x02" +
		"<w\x02=y\x02>{\x02?}\x02@\x7F\x02A\x03\x02\x07\x03\x022;\x04\x02C\\c|" +
		"\x06\x022;C\\aac|\x03\x02aa\x05\x02\v\f\x0F\x0F\"\"\x02\u01A9\x02\x03" +
		"\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t" +
		"\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03" +
		"\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03" +
		"\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03" +
		"\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03" +
		"\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02" +
		"\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02" +
		"/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02" +
		"\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02" +
		"\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03" +
		"\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02" +
		"\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02" +
		"Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02" +
		"\x02\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02\x02]\x03\x02\x02\x02" +
		"\x02_\x03\x02\x02\x02\x02a\x03\x02\x02\x02\x02c\x03\x02\x02\x02\x02e\x03" +
		"\x02\x02\x02\x02g\x03\x02\x02\x02\x02i\x03\x02\x02\x02\x02k\x03\x02\x02" +
		"\x02\x02m\x03\x02\x02\x02\x02o\x03\x02\x02\x02\x02q\x03\x02\x02\x02\x02" +
		"s\x03\x02\x02\x02\x02u\x03\x02\x02\x02\x02w\x03\x02\x02\x02\x02y\x03\x02" +
		"\x02\x02\x02{\x03\x02\x02\x02\x02}\x03\x02\x02\x02\x02\x7F\x03\x02\x02" +
		"\x02\x03\x81\x03\x02\x02\x02\x05\x88\x03\x02\x02\x02\x07\x8A\x03\x02\x02" +
		"\x02\t\x8C\x03\x02\x02\x02\v\x92\x03\x02\x02\x02\r\x94\x03\x02\x02\x02" +
		"\x0F\x98\x03\x02\x02\x02\x11\x9F\x03\x02\x02\x02\x13\xA1\x03\x02\x02\x02" +
		"\x15\xA6\x03\x02\x02\x02\x17\xAD\x03\x02\x02\x02\x19\xAF\x03\x02\x02\x02" +
		"\x1B\xB1\x03\x02\x02\x02\x1D\xB5\x03\x02\x02\x02\x1F\xB9\x03\x02\x02\x02" +
		"!\xC0\x03\x02\x02\x02#\xC7\x03\x02\x02\x02%\xD0\x03\x02\x02\x02\'\xD2" +
		"\x03\x02\x02\x02)\xD5\x03\x02\x02\x02+\xD8\x03\x02\x02\x02-\xDC\x03\x02" +
		"\x02\x02/\xE0\x03\x02\x02\x021\xE5\x03\x02\x02\x023\xE7\x03\x02\x02\x02" +
		"5\xE9\x03\x02\x02\x027\xEB\x03\x02\x02\x029\xED\x03\x02\x02\x02;\xEF\x03" +
		"\x02\x02\x02=\xF2\x03\x02\x02\x02?\xF7\x03\x02\x02\x02A\xF9\x03\x02\x02" +
		"\x02C\u010B\x03\x02\x02\x02E\u010E\x03\x02\x02\x02G\u0112\x03\x02\x02" +
		"\x02I\u0116\x03\x02\x02\x02K\u0119\x03\x02\x02\x02M\u011D\x03\x02\x02" +
		"\x02O\u0125\x03\x02\x02\x02Q\u012E\x03\x02\x02\x02S\u0131\x03\x02\x02" +
		"\x02U\u0137\x03\x02\x02\x02W\u013B\x03\x02\x02\x02Y\u013F\x03\x02\x02" +
		"\x02[\u0145\x03\x02\x02\x02]\u0147\x03\x02\x02\x02_\u0149\x03\x02\x02" +
		"\x02a\u014B\x03\x02\x02\x02c\u014D\x03\x02\x02\x02e\u014F\x03\x02\x02" +
		"\x02g\u0151\x03\x02\x02\x02i\u0153\x03\x02\x02\x02k\u0156\x03\x02\x02" +
		"\x02m\u0159\x03\x02\x02\x02o\u015C\x03\x02\x02\x02q\u015F\x03\x02\x02" +
		"\x02s\u0162\x03\x02\x02\x02u\u0164\x03\x02\x02\x02w\u016D\x03\x02\x02" +
		"\x02y\u017C\x03\x02\x02\x02{\u017E\x03\x02\x02\x02}\u018B\x03\x02\x02" +
		"\x02\x7F\u019A\x03\x02\x02\x02\x81\x82\x07o\x02\x02\x82\x83\x07q\x02\x02" +
		"\x83\x84\x07f\x02\x02\x84\x85\x07w\x02\x02\x85\x86\x07n\x02\x02\x86\x87" +
		"\x07g\x02\x02\x87\x04\x03\x02\x02\x02\x88\x89\x07}\x02\x02\x89\x06\x03" +
		"\x02\x02\x02\x8A\x8B\x07\x7F\x02\x02\x8B\b\x03\x02\x02\x02\x8C\x8D\x07" +
		"e\x02\x02\x8D\x8E\x07q\x02\x02\x8E\x8F\x07p\x02\x02\x8F\x90\x07u\x02\x02" +
		"\x90\x91\x07v\x02\x02\x91\n\x03\x02\x02\x02\x92\x93\x07<\x02\x02\x93\f" +
		"\x03\x02\x02\x02\x94\x95\x07x\x02\x02\x95\x96\x07c\x02\x02\x96\x97\x07" +
		"t\x02\x02\x97\x0E\x03\x02\x02\x02\x98\x99\x07c\x02\x02\x99\x9A\x07u\x02" +
		"\x02\x9A\x9B\x07u\x02\x02\x9B\x9C\x07w\x02\x02\x9C\x9D\x07o\x02\x02\x9D" +
		"\x9E\x07g\x02\x02\x9E\x10\x03\x02\x02\x02\x9F\xA0\x07?\x02\x02\xA0\x12" +
		"\x03\x02\x02\x02\xA1\xA2\x07v\x02\x02\xA2\xA3\x07{\x02\x02\xA3\xA4\x07" +
		"r\x02\x02\xA4\xA5\x07g\x02\x02\xA5\x14\x03\x02\x02\x02\xA6\xA7\x07k\x02" +
		"\x02\xA7\xA8\x07o\x02\x02\xA8\xA9\x07r\x02\x02\xA9\xAA\x07q\x02\x02\xAA" +
		"\xAB\x07t\x02\x02\xAB\xAC\x07v\x02\x02\xAC\x16\x03\x02\x02\x02\xAD\xAE" +
		"\x070\x02\x02\xAE\x18\x03\x02\x02\x02\xAF\xB0\x07=\x02\x02\xB0\x1A\x03" +
		"\x02\x02\x02\xB1\xB2\x07x\x02\x02\xB2\xB3\x07c\x02\x02\xB3\xB4\x07n\x02" +
		"\x02\xB4\x1C\x03\x02\x02\x02\xB5\xB6\x07f\x02\x02\xB6\xB7\x07g\x02\x02" +
		"\xB7\xB8\x07h\x02\x02\xB8\x1E\x03\x02\x02\x02\xB9\xBA\x07u\x02\x02\xBA" +
		"\xBB\x07v\x02\x02\xBB\xBC\x07c\x02\x02\xBC\xBD\x07v\x02\x02\xBD\xBE\x07" +
		"k\x02\x02\xBE\xBF\x07e\x02\x02\xBF \x03\x02\x02\x02\xC0\xC1\x07c\x02\x02" +
		"\xC1\xC2\x07e\x02\x02\xC2\xC3\x07v\x02\x02\xC3\xC4\x07k\x02\x02\xC4\xC5" +
		"\x07q\x02\x02\xC5\xC6\x07p\x02\x02\xC6\"\x03\x02\x02\x02\xC7\xC8\x07v" +
		"\x02\x02\xC8\xC9\x07g\x02\x02\xC9\xCA\x07o\x02\x02\xCA\xCB\x07r\x02\x02" +
		"\xCB\xCC\x07q\x02\x02\xCC\xCD\x07t\x02\x02\xCD\xCE\x07c\x02\x02\xCE\xCF" +
		"\x07n\x02\x02\xCF$\x03\x02\x02\x02\xD0\xD1\x07.\x02\x02\xD1&\x03\x02\x02" +
		"\x02\xD2\xD3\x07/\x02\x02\xD3\xD4\x07@\x02\x02\xD4(\x03\x02\x02\x02\xD5" +
		"\xD6\x07?\x02\x02\xD6\xD7\x07@\x02\x02\xD7*\x03\x02\x02\x02\xD8\xD9\x07" +
		"k\x02\x02\xD9\xDA\x07p\x02\x02\xDA\xDB\x07v\x02\x02\xDB,\x03\x02\x02\x02" +
		"\xDC\xDD\x07u\x02\x02\xDD\xDE\x07v\x02\x02\xDE\xDF\x07t\x02\x02\xDF.\x03" +
		"\x02\x02\x02\xE0\xE1\x07d\x02\x02\xE1\xE2\x07q\x02\x02\xE2\xE3\x07q\x02" +
		"\x02\xE3\xE4\x07n\x02\x02\xE40\x03\x02\x02\x02\xE5\xE6\x07~\x02\x02\xE6" +
		"2\x03\x02\x02\x02\xE7\xE8\x07]\x02\x02\xE84\x03\x02\x02\x02\xE9\xEA\x07" +
		"_\x02\x02\xEA6\x03\x02\x02\x02\xEB\xEC\x07`\x02\x02\xEC8\x03\x02\x02\x02" +
		"\xED\xEE\x07(\x02\x02\xEE:\x03\x02\x02\x02\xEF\xF0\x07k\x02\x02\xF0\xF1" +
		"\x07h\x02\x02\xF1<\x03\x02\x02\x02\xF2\xF3\x07g\x02\x02\xF3\xF4\x07n\x02" +
		"\x02\xF4\xF5\x07u\x02\x02\xF5\xF6\x07g\x02\x02\xF6>\x03\x02\x02\x02\xF7" +
		"\xF8\x07a\x02\x02\xF8@\x03\x02\x02\x02\xF9\xFD\x07$\x02\x02\xFA\xFC\v" +
		"\x02\x02\x02\xFB\xFA\x03\x02\x02\x02\xFC\xFF\x03\x02\x02\x02\xFD\xFE\x03" +
		"\x02\x02\x02\xFD\xFB\x03\x02\x02\x02\xFE\u0100\x03\x02\x02\x02\xFF\xFD" +
		"\x03\x02\x02\x02\u0100\u0101\x07$\x02\x02\u0101B\x03\x02\x02\x02\u0102" +
		"\u0103\x07h\x02\x02\u0103\u0104\x07c\x02\x02\u0104\u0105\x07n\x02\x02" +
		"\u0105\u0106\x07u\x02\x02\u0106\u010C\x07g\x02\x02\u0107\u0108\x07v\x02" +
		"\x02\u0108\u0109\x07t\x02\x02\u0109\u010A\x07w\x02\x02\u010A\u010C\x07" +
		"g\x02\x02\u010B\u0102\x03\x02\x02\x02\u010B\u0107\x03\x02\x02\x02\u010C" +
		"D\x03\x02\x02\x02\u010D\u010F\t\x02\x02\x02\u010E\u010D\x03\x02\x02\x02" +
		"\u010F\u0110\x03\x02\x02\x02\u0110\u010E\x03\x02\x02\x02\u0110\u0111\x03" +
		"\x02\x02\x02\u0111F\x03\x02\x02\x02\u0112\u0113\x07c\x02\x02\u0113\u0114" +
		"\x07p\x02\x02\u0114\u0115\x07f\x02\x02\u0115H\x03\x02\x02\x02\u0116\u0117" +
		"\x07q\x02\x02\u0117\u0118\x07t\x02\x02\u0118J\x03\x02\x02\x02\u0119\u011A" +
		"\x07k\x02\x02\u011A\u011B\x07h\x02\x02\u011B\u011C\x07h\x02\x02\u011C" +
		"L\x03\x02\x02\x02\u011D\u011E\x07k\x02\x02\u011E\u011F\x07o\x02\x02\u011F" +
		"\u0120\x07r\x02\x02\u0120\u0121\x07n\x02\x02\u0121\u0122\x07k\x02\x02" +
		"\u0122\u0123\x07g\x02\x02\u0123\u0124\x07u\x02\x02\u0124N\x03\x02\x02" +
		"\x02\u0125\u0126\x07u\x02\x02\u0126\u0127\x07w\x02\x02\u0127\u0128\x07" +
		"d\x02\x02\u0128\u0129\x07u\x02\x02\u0129\u012A\x07g\x02\x02\u012A\u012B" +
		"\x07v\x02\x02\u012B\u012C\x07g\x02\x02\u012C\u012D\x07s\x02\x02\u012D" +
		"P\x03\x02\x02\x02\u012E\u012F\x07k\x02\x02\u012F\u0130\x07p\x02\x02\u0130" +
		"R\x03\x02\x02\x02\u0131\u0132\x07p\x02\x02\u0132\u0133\x07q\x02\x02\u0133" +
		"\u0134\x07v\x02\x02\u0134\u0135\x07k\x02\x02\u0135\u0136\x07p\x02\x02" +
		"\u0136T\x03\x02\x02\x02\u0137\u0138\x07u\x02\x02\u0138\u0139\x07g\x02" +
		"\x02\u0139\u013A\x07v\x02\x02\u013AV\x03\x02\x02\x02\u013B\u013C\x07u" +
		"\x02\x02\u013C\u013D\x07g\x02\x02\u013D\u013E\x07s\x02\x02\u013EX\x03" +
		"\x02\x02\x02\u013F\u0140\x07o\x02\x02\u0140\u0141\x07c\x02\x02\u0141\u0142" +
		"\x07v\x02\x02\u0142\u0143\x07e\x02\x02\u0143\u0144\x07j\x02\x02\u0144" +
		"Z\x03\x02\x02\x02\u0145\u0146\x07-\x02\x02\u0146\\\x03\x02\x02\x02\u0147" +
		"\u0148\x07/\x02\x02\u0148^\x03\x02\x02\x02\u0149\u014A\x07,\x02\x02\u014A" +
		"`\x03\x02\x02\x02\u014B\u014C\x071\x02\x02\u014Cb\x03\x02\x02\x02\u014D" +
		"\u014E\x07\'\x02\x02\u014Ed\x03\x02\x02\x02\u014F\u0150\x07@\x02\x02\u0150" +
		"f\x03\x02\x02\x02\u0151\u0152\x07>\x02\x02\u0152h\x03\x02\x02\x02\u0153" +
		"\u0154\x07@\x02\x02\u0154\u0155\x07?\x02\x02\u0155j\x03\x02\x02\x02\u0156" +
		"\u0157\x07>\x02\x02\u0157\u0158\x07?\x02\x02\u0158l\x03\x02\x02\x02\u0159" +
		"\u015A\x07#\x02\x02\u015A\u015B\x07?\x02\x02\u015Bn\x03\x02\x02\x02\u015C" +
		"\u015D\x07?\x02\x02\u015D\u015E\x07?\x02\x02\u015Ep\x03\x02\x02\x02\u015F" +
		"\u0160\x07>\x02\x02\u0160\u0161\x07/\x02\x02\u0161r\x03\x02\x02\x02\u0162" +
		"\u0163\x07*\x02\x02\u0163t\x03\x02\x02\x02\u0164\u0165\x07+\x02\x02\u0165" +
		"v\x03\x02\x02\x02\u0166\u016E\x05y=\x02\u0167\u0168\x05y=\x02\u0168\u0169" +
		"\x07<\x02\x02\u0169\u016A\x07<\x02\x02\u016A\u016B\x03\x02\x02\x02\u016B" +
		"\u016C\x05w<\x02\u016C\u016E\x03\x02\x02\x02\u016D\u0166\x03\x02\x02\x02" +
		"\u016D\u0167\x03\x02\x02\x02\u016Ex\x03\x02\x02\x02\u016F\u0173\t\x03" +
		"\x02\x02\u0170\u0172\t\x04\x02\x02\u0171\u0170\x03\x02\x02\x02\u0172\u0175" +
		"\x03\x02\x02\x02\u0173\u0171\x03\x02\x02\x02\u0173\u0174\x03\x02\x02\x02" +
		"\u0174\u017D\x03\x02\x02\x02\u0175\u0173\x03\x02\x02\x02\u0176\u0178\t" +
		"\x05\x02\x02\u0177\u0179\t\x04\x02\x02\u0178\u0177\x03\x02\x02\x02\u0179" +
		"\u017A\x03\x02\x02\x02\u017A\u0178\x03\x02\x02\x02\u017A\u017B\x03\x02" +
		"\x02\x02\u017B\u017D\x03\x02\x02\x02\u017C\u016F\x03\x02\x02\x02\u017C" +
		"\u0176\x03\x02\x02\x02\u017Dz\x03\x02\x02\x02\u017E\u017F\x071\x02\x02" +
		"\u017F\u0180\x071\x02\x02\u0180\u0184\x03\x02\x02\x02\u0181\u0183\v\x02" +
		"\x02\x02\u0182\u0181\x03\x02\x02\x02\u0183\u0186\x03\x02\x02\x02\u0184" +
		"\u0185\x03\x02\x02\x02\u0184\u0182\x03\x02\x02\x02\u0185\u0187\x03\x02" +
		"\x02\x02\u0186\u0184\x03\x02\x02\x02\u0187\u0188\x07\f\x02\x02\u0188\u0189" +
		"\x03\x02\x02\x02\u0189\u018A\b>\x02\x02\u018A|\x03\x02\x02\x02\u018B\u018C" +
		"\x071\x02\x02\u018C\u018D\x07,\x02\x02\u018D\u0191\x03\x02\x02\x02\u018E" +
		"\u0190\v\x02\x02\x02\u018F\u018E\x03\x02\x02\x02\u0190\u0193\x03\x02\x02" +
		"\x02\u0191\u0192\x03\x02\x02\x02\u0191\u018F\x03\x02\x02\x02\u0192\u0194" +
		"\x03\x02\x02\x02\u0193\u0191\x03\x02\x02\x02\u0194\u0195\x07,\x02\x02" +
		"\u0195\u0196\x071\x02\x02\u0196\u0197\x03\x02\x02\x02\u0197\u0198\b?\x02" +
		"\x02\u0198~\x03\x02\x02\x02\u0199\u019B\t\x06\x02\x02\u019A\u0199\x03" +
		"\x02\x02\x02\u019B\u019C\x03\x02\x02\x02\u019C\u019A\x03\x02\x02\x02\u019C" +
		"\u019D\x03\x02\x02\x02\u019D\u019E\x03\x02\x02\x02\u019E\u019F\b@\x02" +
		"\x02\u019F\x80\x03\x02\x02\x02\r\x02\xFD\u010B\u0110\u016D\u0173\u017A" +
		"\u017C\u0184\u0191\u019C\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!TntLexer.__ATN) {
			TntLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(TntLexer._serializedATN));
		}

		return TntLexer.__ATN;
	}

}

