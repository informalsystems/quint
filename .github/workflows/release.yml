name: release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  release:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./quint
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: "17"
          registry-url: "https://registry.npmjs.org"
      - name: Compile
        run: npm ci
      - name: Test
        run: npm run test
      - name: Extract release notes
        # Get the release notes for the version by printing all lines between lines
        # starting with the version header and ending with the next version header,
        # inclusive. We then drop the last line to remove the subsequent version header.
        run: |
          version=$(npm pkg get version | sed 's/"//g')
          sed -n "/## v$version/,/## v/p" ../CHANGELOG.md | head -n -1 > ${{ github.workspace }}/release-notes.txt
      - name: Release
        # See https://github.com/softprops/action-gh-release#-external-release-notes
        uses: softprops/action-gh-release@v1
        with:
          body_path: ${{ github.workspace }}/release-notes.txt
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish
        # See https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages#publishing-packages-to-the-npm-registry
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  wait-for-npm:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Wait for NPM
        timeout-minutes: 30
        env:
          REF_NAME: ${{ github.ref_name }}
        run: |
          while ! curl -s https://registry.npmjs.org/@informalsystems/quint | jq -er ".versions.\"${REF_NAME#v}\""; do
            echo "Waiting for NPM to publish version ${REF_NAME#v}..."
            sleep 30
          done
  check-on-arch:
    strategy:
      matrix:
        os:
          # linux-amd64
          - ubuntu-22.04
          # linux-arm64
          - ubuntu-22.04-arm
          # macos-arm64
          - macos-14
          # macos-intel
          - macos-13
          # pc-amd64
          - windows-2022
    needs: wait-for-npm
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Check Quint
        timeout-minutes: 30
        env:
          REF_NAME: ${{ github.ref_name }}
        run: |
          deno run --allow-all --node-modules-dir=auto --allow-scripts "npm:@informalsystems/quint@${REF_NAME#v}" --version
  upload-binaries:
    needs: check-on-arch
    runs-on: ubuntu-latest
    steps:
      - name: Install Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Upload assets
        env:
          GH_REPO: ${{ github.repository }}
          REF_NAME: ${{ github.ref_name }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./.github/upload-binaries.sh "$GH_REPO" "$REF_NAME" --publish
